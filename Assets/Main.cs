//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Main.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Main: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Main()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Main"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""6800c311-2689-4728-81b4-6a41acccbac4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""7c13e676-09c6-4b98-8095-ddf4ca7d9bd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveGamePad"",
                    ""type"": ""Value"",
                    ""id"": ""af570eed-91e9-4045-a13b-95c79cfa2e23"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LaserKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""3048e1cb-8fab-45b0-94cc-59e9de7a2c9c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LaserGamePad"",
                    ""type"": ""Button"",
                    ""id"": ""664d661d-c604-415d-9c49-7d33f23e2377"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""b68a27b5-ee91-4f36-ac9c-8763b4095dba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectGamepad"",
                    ""type"": ""Button"",
                    ""id"": ""75a22c2b-008a-40dc-9459-4a18f36a5f69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BombKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""f4a4a589-99c6-43a6-b78e-81daf985fae1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BombGamepad"",
                    ""type"": ""Button"",
                    ""id"": ""89000fc7-b64b-437c-b16f-449317fe647f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseVacuumKeyoard"",
                    ""type"": ""Button"",
                    ""id"": ""bdf8a2e0-9f9c-4cf5-ba69-78a3e225c9ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseVacuumGamePad"",
                    ""type"": ""Button"",
                    ""id"": ""af0c452f-c84c-403e-9286-a6dea2bcc69c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""734c0f78-8f49-47a1-b0ad-66e08ed97705"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ffdc6a02-91ac-4701-9035-d254614a27ac"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3ea5e1ed-a414-48fd-adc3-101ed48ffa93"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e5cbb23-4778-4699-9109-534297853313"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""98fb3367-1804-4f9d-b810-10da7cb10c5b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ffa5b20b-4e30-4277-9ca3-a47fa0009439"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39f43224-1eac-46af-87ce-58bcf373ffdb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaserKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f34343de-25aa-4dd6-b08d-f28fbc655895"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaserGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c495f4f3-d52f-48d9-8ed0-98c8bb596fd6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9567837e-3f94-4b80-95e2-3c9dada25fc1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b3957c5-5534-49cb-90f7-b10159a95123"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7e5230d-54fa-4d95-9ce2-2b4a632c49d7"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BombGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e9d4316-506a-4dea-8f09-1c564903da0d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseVacuumKeyoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d00aaa24-4fab-4c84-97da-9dd8934ad4d6"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseVacuumGamePad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_MoveGamePad = m_Player.FindAction("MoveGamePad", throwIfNotFound: true);
        m_Player_LaserKeyboard = m_Player.FindAction("LaserKeyboard", throwIfNotFound: true);
        m_Player_LaserGamePad = m_Player.FindAction("LaserGamePad", throwIfNotFound: true);
        m_Player_SelectKeyboard = m_Player.FindAction("SelectKeyboard", throwIfNotFound: true);
        m_Player_SelectGamepad = m_Player.FindAction("SelectGamepad", throwIfNotFound: true);
        m_Player_BombKeyboard = m_Player.FindAction("BombKeyboard", throwIfNotFound: true);
        m_Player_BombGamepad = m_Player.FindAction("BombGamepad", throwIfNotFound: true);
        m_Player_UseVacuumKeyoard = m_Player.FindAction("UseVacuumKeyoard", throwIfNotFound: true);
        m_Player_UseVacuumGamePad = m_Player.FindAction("UseVacuumGamePad", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_MoveGamePad;
    private readonly InputAction m_Player_LaserKeyboard;
    private readonly InputAction m_Player_LaserGamePad;
    private readonly InputAction m_Player_SelectKeyboard;
    private readonly InputAction m_Player_SelectGamepad;
    private readonly InputAction m_Player_BombKeyboard;
    private readonly InputAction m_Player_BombGamepad;
    private readonly InputAction m_Player_UseVacuumKeyoard;
    private readonly InputAction m_Player_UseVacuumGamePad;
    public struct PlayerActions
    {
        private @Main m_Wrapper;
        public PlayerActions(@Main wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @MoveGamePad => m_Wrapper.m_Player_MoveGamePad;
        public InputAction @LaserKeyboard => m_Wrapper.m_Player_LaserKeyboard;
        public InputAction @LaserGamePad => m_Wrapper.m_Player_LaserGamePad;
        public InputAction @SelectKeyboard => m_Wrapper.m_Player_SelectKeyboard;
        public InputAction @SelectGamepad => m_Wrapper.m_Player_SelectGamepad;
        public InputAction @BombKeyboard => m_Wrapper.m_Player_BombKeyboard;
        public InputAction @BombGamepad => m_Wrapper.m_Player_BombGamepad;
        public InputAction @UseVacuumKeyoard => m_Wrapper.m_Player_UseVacuumKeyoard;
        public InputAction @UseVacuumGamePad => m_Wrapper.m_Player_UseVacuumGamePad;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @MoveGamePad.started += instance.OnMoveGamePad;
            @MoveGamePad.performed += instance.OnMoveGamePad;
            @MoveGamePad.canceled += instance.OnMoveGamePad;
            @LaserKeyboard.started += instance.OnLaserKeyboard;
            @LaserKeyboard.performed += instance.OnLaserKeyboard;
            @LaserKeyboard.canceled += instance.OnLaserKeyboard;
            @LaserGamePad.started += instance.OnLaserGamePad;
            @LaserGamePad.performed += instance.OnLaserGamePad;
            @LaserGamePad.canceled += instance.OnLaserGamePad;
            @SelectKeyboard.started += instance.OnSelectKeyboard;
            @SelectKeyboard.performed += instance.OnSelectKeyboard;
            @SelectKeyboard.canceled += instance.OnSelectKeyboard;
            @SelectGamepad.started += instance.OnSelectGamepad;
            @SelectGamepad.performed += instance.OnSelectGamepad;
            @SelectGamepad.canceled += instance.OnSelectGamepad;
            @BombKeyboard.started += instance.OnBombKeyboard;
            @BombKeyboard.performed += instance.OnBombKeyboard;
            @BombKeyboard.canceled += instance.OnBombKeyboard;
            @BombGamepad.started += instance.OnBombGamepad;
            @BombGamepad.performed += instance.OnBombGamepad;
            @BombGamepad.canceled += instance.OnBombGamepad;
            @UseVacuumKeyoard.started += instance.OnUseVacuumKeyoard;
            @UseVacuumKeyoard.performed += instance.OnUseVacuumKeyoard;
            @UseVacuumKeyoard.canceled += instance.OnUseVacuumKeyoard;
            @UseVacuumGamePad.started += instance.OnUseVacuumGamePad;
            @UseVacuumGamePad.performed += instance.OnUseVacuumGamePad;
            @UseVacuumGamePad.canceled += instance.OnUseVacuumGamePad;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @MoveGamePad.started -= instance.OnMoveGamePad;
            @MoveGamePad.performed -= instance.OnMoveGamePad;
            @MoveGamePad.canceled -= instance.OnMoveGamePad;
            @LaserKeyboard.started -= instance.OnLaserKeyboard;
            @LaserKeyboard.performed -= instance.OnLaserKeyboard;
            @LaserKeyboard.canceled -= instance.OnLaserKeyboard;
            @LaserGamePad.started -= instance.OnLaserGamePad;
            @LaserGamePad.performed -= instance.OnLaserGamePad;
            @LaserGamePad.canceled -= instance.OnLaserGamePad;
            @SelectKeyboard.started -= instance.OnSelectKeyboard;
            @SelectKeyboard.performed -= instance.OnSelectKeyboard;
            @SelectKeyboard.canceled -= instance.OnSelectKeyboard;
            @SelectGamepad.started -= instance.OnSelectGamepad;
            @SelectGamepad.performed -= instance.OnSelectGamepad;
            @SelectGamepad.canceled -= instance.OnSelectGamepad;
            @BombKeyboard.started -= instance.OnBombKeyboard;
            @BombKeyboard.performed -= instance.OnBombKeyboard;
            @BombKeyboard.canceled -= instance.OnBombKeyboard;
            @BombGamepad.started -= instance.OnBombGamepad;
            @BombGamepad.performed -= instance.OnBombGamepad;
            @BombGamepad.canceled -= instance.OnBombGamepad;
            @UseVacuumKeyoard.started -= instance.OnUseVacuumKeyoard;
            @UseVacuumKeyoard.performed -= instance.OnUseVacuumKeyoard;
            @UseVacuumKeyoard.canceled -= instance.OnUseVacuumKeyoard;
            @UseVacuumGamePad.started -= instance.OnUseVacuumGamePad;
            @UseVacuumGamePad.performed -= instance.OnUseVacuumGamePad;
            @UseVacuumGamePad.canceled -= instance.OnUseVacuumGamePad;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnMoveGamePad(InputAction.CallbackContext context);
        void OnLaserKeyboard(InputAction.CallbackContext context);
        void OnLaserGamePad(InputAction.CallbackContext context);
        void OnSelectKeyboard(InputAction.CallbackContext context);
        void OnSelectGamepad(InputAction.CallbackContext context);
        void OnBombKeyboard(InputAction.CallbackContext context);
        void OnBombGamepad(InputAction.CallbackContext context);
        void OnUseVacuumKeyoard(InputAction.CallbackContext context);
        void OnUseVacuumGamePad(InputAction.CallbackContext context);
    }
}
